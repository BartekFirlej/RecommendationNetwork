@page "/products"

@using BlazorServerFrontend.Services
@using BlazorServerFrontend.DTOs

@inject ProductsService ProductsService
@inject CartService CartService

<h1>Available Products</h1>


<button class="btn btn-primary float-right">
    <NavLink class="nav-link" href="addproduct" style="color: white;">Add product</NavLink>
</button>

<button class="btn btn-primary float-right">
    <NavLink class="nav-link" href="addproducttype" style="color: white;">Add product type</NavLink>
</button>

@if (successMessage != null)
{
    <div class="alert alert-success">@successMessage</div>
}

@if (errorMessage != null)
{
    <div class="alert alert-danger">@errorMessage</div>
}

<table class="table">
    <thead>
        <tr>
            <th class="center-align">Id</th>
            <th class="center-align">Name</th>
            <th class="center-align">Product Type Name</th>
            <th class="center-align">Price</th>
            <th class="center-align"></th>
        </tr>
    </thead>
    <tbody>
        @if (products != null)
        {
            @foreach (var product in products)
            {
                <tr>
                    <td class="center-align">@product.Id</td>
                    <td class="center-align">@product.Name</td>
                    <td class="center-align">@product.ProductTypeName</td>
                    <td class="center-align">@product.Price.ToString("C")</td>
                    <td class="center-align">
                        <div style="display: flex; align-items: center;">
                            <input type="number" id="@($"quantity_{product.Id}")" class="form-control" @bind="productQuantities[product.Id]" style="display: inline; flex: 1; width: 30px;line-height: 1.5; text-align: center;" min="1" />
                            <button class="btn btn-primary" @onclick="() => AddToCart(product, productQuantities[product.Id])" style="margin-left: 10px;">Add to cart</button>
                        </div>

                    </td>
                </tr>
            }
        }

    </tbody>
</table>

@code {
    private List<ProductResponse> products;
    private Dictionary<int, int> productQuantities = new Dictionary<int, int>();
    private string errorMessage;
    private string successMessage;

    protected override async Task OnInitializedAsync()
    {
        products = await ProductsService.GetProductsAsync();
        foreach (var product in products)
        {
            productQuantities[product.Id] = 1;
        }
    }

    private void AddToCart(ProductResponse product, int quantity)
    {
        try
        {
            errorMessage = null;
            successMessage = null;

            var cartItemToAdd = new CartItem
                {
                    ItemId = product.Id,
                    ItemQuantity = quantity
                };

            CartService.AddItemToCart("8", cartItemToAdd);
            successMessage = "Successfully added product to cart.";
        }
        catch (Exception ex)
        {
            errorMessage = $"Can't add product to cart: {ex.Message}";
        }
        StateHasChanged();
    }


}
