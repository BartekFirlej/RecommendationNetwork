@page "/purchaseproposal"

@using BlazorServerFrontend.Services
@using BlazorServerFrontend.DTOs

@inject PurchaseProposalsService PurchaseProposalsService

<h1>Purchase Proposal</h1>

<input type="number" @bind="customerId" placeholder="Customer ID" />

<button class="btn btn-primary" @onclick="() => GetPurchaseProposal((int)customerId)">View Details</button>


@if (purchaseProposal != null)
{
    <table class="table">
    <thead>
        <tr>
            <th class="center-align">Date</th>
            <th class="center-align">Customer Id</th>
            <th class="center-align">Product Id</th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td class="center-align">@purchaseProposal.Date.ToString("yyyy-MM-dd")</td>
            <td class="center-align">@purchaseProposal.CustomerId</td>
            <td class="center-align">@purchaseProposal.ProductId</td>

        </tr>
    </tbody>
    </table>
}
@if (errorMessage != null)
{
    <div class="alert alert-danger">@errorMessage</div>
}


@code {
    private PurchaseProposalResponse purchaseProposal;
    private int? customerId;
    private string errorMessage;

    private async void GetPurchaseProposal(int customerId)
    {
        errorMessage = null;
        purchaseProposal = null;
        if (customerId > 0)
        {
            try
            {
                purchaseProposal = await PurchaseProposalsService.GetPurchaseProposalAsync(customerId);
            }
            catch (Exception ex)
            {
                errorMessage = String.Format("Not found proposal for customer with ID {0}. ", customerId);
            }
            StateHasChanged();
        }
        else
        {
            errorMessage = String.Format("Customer Id must be greater than 0. ", customerId);
        }
    }
}
