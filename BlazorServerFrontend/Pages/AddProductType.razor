@page "/addproducttype"
@using BlazorServerFrontend.DTOs
@using BlazorServerFrontend.Services

@inject ProductTypesService ProductTypesService

<h3>Add New Product Type</h3>

<EditForm Model="@productTypeRequest" OnValidSubmit="@HandleValidSubmit">
    <DataAnnotationsValidator />

    <div class="form-group">
        <label for="name">Name:</label>
        <InputText id="name" class="form-control" @bind-Value="@productTypeRequest.Name" />
    </div>

    <button type="submit" class="btn btn-primary" disabled="@string.IsNullOrEmpty(productTypeRequest.Name)">Add Product Type</button>
</EditForm>

@if (successMessage != null)
{
    <div class="alert alert-success">@successMessage</div>
}

@if (errorMessage != null)
{
    <div class="alert alert-danger">@errorMessage</div>
}

@code {
    private ProductTypeRequest productTypeRequest = new ProductTypeRequest();
    private ProductTypeResponse productTypeResponse;
    private string errorMessage;
    private string successMessage; 

    private async void HandleValidSubmit()
    {
        await PostProductType(productTypeRequest);
    }

    private async Task PostProductType(ProductTypeRequest productTypeRequest)
    {
        errorMessage = null;
        successMessage = null;
        productTypeResponse = null;

        try
        {
            productTypeResponse = await ProductTypesService.PostProductTypeAsync(productTypeRequest);
            successMessage = $"Successfully added product type '{productTypeRequest.Name}'.";
            this.productTypeRequest = new ProductTypeRequest(); 
        }
        catch (Exception ex)
        {
            errorMessage = $"Can't add product type '{productTypeRequest.Name}'. Error: {ex.Message}";
        }
        StateHasChanged();
    }
}